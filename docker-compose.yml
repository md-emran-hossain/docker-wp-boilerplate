version: '3'

services:
  #nginx
  webserver:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: nginx
    ports:
      - "${APP_PORT:-8000}:80"
    volumes:
      - ./wp:/var/www/html
    depends_on:
      - php
      - mysql
    networks:
      - wp_app_net
  #mysql database
  mysql:
    image: mysql:5.7.4
    volumes:
      - mysql_data:/var/lib/mysql
    container_name: mysql
    restart: always
    # The database will connect properly when this line is commented out
    # Uncomment only if you need to access the database from outside of the container
    # ports:
    #  - 3306:3306 # change port if required
    env_file: .env
    environment:
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    networks:
      - wp_app_net
  #php
  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php
    volumes:
      - ./wp:/var/www/html
    networks:
      - wp_app_net
  #wordpress
  wp:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: wp
    entrypoint: ["/wp-init.sh", 'wp', '--allow-root']
    volumes:
      - ./wp:/var/www/html
    networks:
      - wp_app_net
  #adminer
  adminer:
    depends_on:
      - mysql
    image: adminer:4.8.1
    restart: always
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    ports:
      - "${DB_ADMIN_PORT:-8080}:8080"
    networks:
      - wp_app_net
networks:
  wp_app_net:
    driver: bridge
volumes:
  mysql_data:
